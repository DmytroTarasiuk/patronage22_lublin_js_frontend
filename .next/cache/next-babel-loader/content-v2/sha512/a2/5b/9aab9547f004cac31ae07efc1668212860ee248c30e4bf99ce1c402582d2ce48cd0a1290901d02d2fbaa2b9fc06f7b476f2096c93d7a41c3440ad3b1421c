{"ast":null,"code":"import { createTheme } from '@material-ui/core/styles';\nimport ThemeOptions from './types'; // interface ThemeOptions {\n//     palette: {\n//         common: {\n//             black: string,\n//             white: string,\n//         },\n//     }\n// }\n\nvar theme = createTheme({\n  palette: {\n    common: {\n      black: '#19192B',\n      white: '#ffffff'\n    },\n    primary: {\n      main: '#557fa8',\n      dark: '#0056ad'\n    },\n    secondary: {\n      main: '#607D8B',\n      contrastText: '#757575'\n    },\n    grey: {\n      '500': '#bcbcbc',\n      '700': '#79797a'\n    },\n    info: {\n      main: '#1bb2f1'\n    },\n    success: {\n      main: '#00d589'\n    },\n    error: {\n      main: '#832838'\n    },\n    background: {\n      \"default\": '#fff'\n    }\n  },\n  typography: {\n    fontFamily: 'Roboto'\n  }\n});\nexport default theme;","map":{"version":3,"sources":["/Users/eszarowska/Desktop/patronage22_lublin_js_frontend/src/styles/theme.ts"],"names":["createTheme","ThemeOptions","theme","palette","common","black","white","primary","main","dark","secondary","contrastText","grey","info","success","error","background","typography","fontFamily"],"mappings":"AAAA,SAASA,WAAT,QAA4B,0BAA5B;AACA,OAAOC,YAAP,MAAyB,SAAzB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAMC,KAAK,GAAGF,WAAW,CAAC;AACtBG,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,SADH;AAEJC,MAAAA,KAAK,EAAE;AAFH,KADH;AAKLC,IAAAA,OAAO,EAAE;AACLC,MAAAA,IAAI,EAAE,SADD;AAELC,MAAAA,IAAI,EAAE;AAFD,KALJ;AASLC,IAAAA,SAAS,EAAE;AACPF,MAAAA,IAAI,EAAE,SADC;AAEPG,MAAAA,YAAY,EAAE;AAFP,KATN;AAaLC,IAAAA,IAAI,EAAE;AACF,aAAO,SADL;AAEF,aAAO;AAFL,KAbD;AAiBLC,IAAAA,IAAI,EAAE;AACFL,MAAAA,IAAI,EAAE;AADJ,KAjBD;AAoBLM,IAAAA,OAAO,EAAE;AACLN,MAAAA,IAAI,EAAE;AADD,KApBJ;AAuBLO,IAAAA,KAAK,EAAE;AACHP,MAAAA,IAAI,EAAE;AADH,KAvBF;AA0BLQ,IAAAA,UAAU,EAAE;AACR,iBAAS;AADD;AA1BP,GADa;AA+BtBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,UAAU,EAAE;AADJ;AA/BU,CAAD,CAAzB;AAmCA,eAAehB,KAAf","sourcesContent":["import { createTheme } from '@material-ui/core/styles';\nimport ThemeOptions from './types';\n\n// interface ThemeOptions {\n//     palette: {\n//         common: {\n//             black: string,\n//             white: string,\n//         },\n//     }\n// }\n\n\nconst theme = createTheme({\n    palette: {\n        common: {\n            black: '#19192B',\n            white: '#ffffff',\n        },\n        primary: {\n            main: '#557fa8',\n            dark: '#0056ad'\n        },\n        secondary: {\n            main: '#607D8B',\n            contrastText: '#757575',\n        },\n        grey: {\n            '500': '#bcbcbc',\n            '700': '#79797a',\n        },\n        info: {\n            main: '#1bb2f1',\n        },\n        success: {\n            main: '#00d589',\n        },\n        error: {\n            main: '#832838',\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n    typography: {\n        fontFamily: 'Roboto',\n    },\n});\nexport default theme;\nexport type ThemeOptions = typeof theme;\n"]},"metadata":{},"sourceType":"module"}