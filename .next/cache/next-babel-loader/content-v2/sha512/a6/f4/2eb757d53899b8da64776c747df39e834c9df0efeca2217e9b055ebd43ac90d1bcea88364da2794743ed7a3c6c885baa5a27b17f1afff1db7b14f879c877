{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dmytro\\\\Desktop\\\\nextjs\\\\meetups\\\\src\\\\store\\\\auth-context.tsx\";\nimport React, { useState } from \"react\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nexport const AuthContextProvider = props => {\n  const getInitialToken = () => localStorage.getItem(\"token\");\n\n  const {\n    0: token,\n    1: setToken\n  } = useState(getInitialToken);\n  const userIsLoggedIn = !!token;\n\n  const loginHandler = token => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n  };\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem(\"token\");\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\nexport default AuthContext;","map":{"version":3,"sources":["C:/Users/Dmytro/Desktop/nextjs/meetups/src/store/auth-context.tsx"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","AuthContextProvider","props","getInitialToken","localStorage","getItem","setToken","userIsLoggedIn","loginHandler","setItem","logoutHandler","removeItem","contextValue","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AASA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoC;AACtDC,EAAAA,KAAK,EAAE,EAD+C;AAEtDC,EAAAA,UAAU,EAAE,KAF0C;AAGtDC,EAAAA,KAAK,EAAGF,KAAD,IAAmB,CAAE,CAH0B;AAItDG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJsC,CAApC,CAApB;AAOA,OAAO,MAAMC,mBAA6B,GAAIC,KAAD,IAAW;AACtD,QAAMC,eAAe,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA9B;;AAEA,QAAM;AAAA,OAACR,KAAD;AAAA,OAAQS;AAAR,MAAoBZ,QAAQ,CAACS,eAAD,CAAlC;AAEA,QAAMI,cAAc,GAAG,CAAC,CAACV,KAAzB;;AAEA,QAAMW,YAAY,GAAIX,KAAD,IAAmB;AACtCS,IAAAA,QAAQ,CAACT,KAAD,CAAR;AACAO,IAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BZ,KAA9B;AACD,GAHD;;AAKA,QAAMa,aAAa,GAAG,MAAM;AAC1BJ,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACD,GAHD;;AAKA,QAAMC,YAAY,GAAG;AACnBf,IAAAA,KAAK,EAAEA,KADY;AAEnBC,IAAAA,UAAU,EAAES,cAFO;AAGnBR,IAAAA,KAAK,EAAES,YAHY;AAInBR,IAAAA,MAAM,EAAEU;AAJW,GAArB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,YAA7B;AAAA,cACGV,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BM;AA+BP,eAAelB,WAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\ntype AuthContextObj = {\r\n  token: string | null;\r\n  isLoggedIn: boolean;\r\n  login: (token: string) => void;\r\n  logout: () => void;\r\n};\r\n\r\nconst AuthContext = React.createContext<AuthContextObj>({\r\n  token: \"\",\r\n  isLoggedIn: false,\r\n  login: (token: string) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const AuthContextProvider: React.FC = (props) => {\r\n  const getInitialToken = () => localStorage.getItem(\"token\");\r\n\r\n  const [token, setToken] = useState(getInitialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const loginHandler = (token: string) => {\r\n    setToken(token);\r\n    localStorage.setItem(\"token\", token);\r\n  };\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem(\"token\");\r\n  };\r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"]},"metadata":{},"sourceType":"module"}