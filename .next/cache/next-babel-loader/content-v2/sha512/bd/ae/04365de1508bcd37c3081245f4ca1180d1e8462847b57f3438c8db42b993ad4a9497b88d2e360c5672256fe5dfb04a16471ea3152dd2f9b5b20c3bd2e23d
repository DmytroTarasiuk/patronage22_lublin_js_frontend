{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/eszarowska/Desktop/patronage22_lublin_js_frontend/src/components/MainButton/index.tsx\";\nimport React from \"react\";\nimport { Button } from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\nconst CustomButton = styled(Button)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.primary.main,\n  fontSize: 14,\n  padding: '12px 30px',\n  lineHeight: 1.5,\n  border: '1px solid',\n  borderColor: theme.palette.primary.main,\n  textTransform: 'none',\n  borderRadius: '0.25 rem',\n  '&:hover': {\n    backgroundColor: theme.palette.primary.light,\n    borderColor: theme.palette.primary.light,\n    boxShadow: 'none',\n    color: theme.palette.text.primary\n  },\n  '&:active': {\n    boxShadow: 'none',\n    backgroundColor: theme.palette.primary.light,\n    borderColor: theme.palette.primary.light\n  }\n}));\n// interface Props {\n//   children: React.ReactNode;\n//   onClick?: (e: any) => void;\n//   href:string;\n// }\nconst MainButton = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    href: props.href,\n    onClick: props.onClick,\n    ref: ref,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n});\nexport default MainButton;","map":{"version":3,"sources":["/Users/eszarowska/Desktop/patronage22_lublin_js_frontend/src/components/MainButton/index.tsx"],"names":["React","Button","styled","CustomButton","theme","backgroundColor","palette","primary","main","fontSize","padding","lineHeight","border","borderColor","textTransform","borderRadius","light","boxShadow","color","text","MainButton","forwardRef","props","ref","href","onClick","children"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AAGA,MAAMC,YAAY,GAAGD,MAAM,CAACD,MAAD,CAAN,CAAe,CAAC;AAAEG,EAAAA;AAAF,CAAD,MAAgB;AAClDC,EAAAA,eAAe,EAAED,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC,IADW;AAElDC,EAAAA,QAAQ,EAAE,EAFwC;AAGlDC,EAAAA,OAAO,EAAE,WAHyC;AAIlDC,EAAAA,UAAU,EAAE,GAJsC;AAKlDC,EAAAA,MAAM,EAAE,WAL0C;AAMlDC,EAAAA,WAAW,EAAET,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBC,IANe;AAOlDM,EAAAA,aAAa,EAAE,MAPmC;AAQlDC,EAAAA,YAAY,EAAC,UARqC;AASlD,aAAW;AACTV,IAAAA,eAAe,EAAED,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBS,KAD9B;AAETH,IAAAA,WAAW,EAAET,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBS,KAF1B;AAGTC,IAAAA,SAAS,EAAE,MAHF;AAITC,IAAAA,KAAK,EAACd,KAAK,CAACE,OAAN,CAAca,IAAd,CAAmBZ;AAJhB,GATuC;AAelD,cAAY;AACVU,IAAAA,SAAS,EAAE,MADD;AAEVZ,IAAAA,eAAe,EAAED,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBS,KAF7B;AAGVH,IAAAA,WAAW,EAAET,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBS;AAHzB;AAfsC,CAAhB,CAAf,CAArB;AA6BA;AACA;AACA;AACA;AACA;AAEA,MAAMI,UAAU,gBAACpB,KAAK,CAACqB,UAAN,CAA6B,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5D,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AACsB,IAAA,IAAI,EAAED,KAAK,CAACE,IADlC;AACwC,IAAA,OAAO,EAAEF,KAAK,CAACG,OADvD;AACgE,IAAA,GAAG,EAAEF,GADrE;AAAA,cAGGD,KAAK,CAACI;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARgB,CAAjB;AAUA,eAAeN,UAAf","sourcesContent":["import React from \"react\";\nimport {Button} from \"@mui/material\";\nimport { styled } from '@mui/material/styles';\n\n\nconst CustomButton = styled(Button)(({ theme }) => ({\n  backgroundColor: theme.palette.primary.main,\n  fontSize: 14,\n  padding: '12px 30px',\n  lineHeight: 1.5,\n  border: '1px solid',\n  borderColor: theme.palette.primary.main,\n  textTransform: 'none',\n  borderRadius:'0.25 rem',\n  '&:hover': {\n    backgroundColor: theme.palette.primary.light,\n    borderColor: theme.palette.primary.light,\n    boxShadow: 'none',\n    color:theme.palette.text.primary,\n  },\n  '&:active': {\n    boxShadow: 'none',\n    backgroundColor: theme.palette.primary.light,\n    borderColor: theme.palette.primary.light,\n  },\n}))\n\ntype Props = { \n  children: React.ReactNode; \n  onClick?: (e: any) => void;\n  href:string;\n  // type: \"submit\" | \"button\" \n};\nexport type Ref = HTMLButtonElement;\n// interface Props {\n//   children: React.ReactNode;\n//   onClick?: (e: any) => void;\n//   href:string;\n// }\n\nconst MainButton=React.forwardRef<Ref, Props>((props, ref) => {\n  return (\n    <Button\n      variant='contained' href={props.href} onClick={props.onClick} ref={ref}\n    >\n      {props.children}\n    </Button>\n  )\n});\n\nexport default MainButton;"]},"metadata":{},"sourceType":"module"}